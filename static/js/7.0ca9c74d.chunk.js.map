{"version":3,"file":"static/js/7.0ca9c74d.chunk.js","mappings":"+NAGe,SAASA,IAAU,IAAD,EAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAI,UAAGJ,EAAOK,IAAI,gBAAd,QAA0B,GA2BpC,OApBAC,EAAAA,EAAAA,YAAU,WACHF,GAILG,MAAM,2GAAD,OACwGH,EADxG,gCAGFI,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IACAL,MAAK,YAAkB,IAAfM,EAAc,EAAdA,QACPhB,EAASgB,EACV,IAAEC,MAAMC,QAAQC,IAEpB,GAAE,CAACjB,EAAOI,KAEJ,iCAAE,kBAAMc,OAAO,GAAGC,SA1BF,SAAAC,GACrBA,EAAKC,iBACLpB,EAAUmB,EAAKE,OAAO,GAAGC,MAAQ,CAAEC,MAAOJ,EAAKE,OAAO,GAAGC,OAAU,CAAC,EACnE,EAuBM,WACH,kBAAOE,KAAK,OAAOC,aAAa,SAChC,mBAAQD,KAAK,SAAb,wBAEF,wBACDrB,EACOP,EAAM8B,KAAI,gBAAEC,EAAF,EAAEA,eAAeC,EAAjB,EAAiBA,GAAjB,OAAuB,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAK,UAAK7B,EAAS8B,UAAd,OAAyB9B,EAASF,QAAlE,UAAqF,wBAAM4B,KAAVC,EAAxG,IACb,MAEH,SAAC,EAAAI,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAMP,C","sources":["components/pages/Movies.jsx"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport { Link,Outlet,  useLocation,useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [films, setFilms] = useState([]);\n  const [search, setSearch] = useSearchParams();\n  const location = useLocation();\n  const name = search.get('query') ?? '';\n    const handelSubmit = even => {\n    even.preventDefault();\n    setSearch(even.target[0].value ? { query: even.target[0].value } : {});\n    }\n    \n \n  useEffect(() => {\n    if (!name) {\n     \n      return;\n    }\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=74e6158a65e53d6dc937ccdd03fe4703&language=en-US&query=${name}&page=1&include_adult=false`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then(({ results }) => {\n        setFilms(results);\n      }).catch(console.log);\n      \n  }, [search,name]);\n  \n  return <><form action=\"\" onSubmit={handelSubmit}>\n        <input type=\"text\" autoComplete=\"off\" />\n        <button type=\"submit\">Searsh</button>\n      </form>\n      <ul >\n    {name?\n            films.map(({original_title,id})=><Link to={`/movies/${id}` }state={`${location.pathname}${location.search}`} key={id}><li >{original_title}</li></Link>)\n        :''}  \n      </ul>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n      \n      </>\n\n\n}\n"],"names":["Movies","useState","films","setFilms","useSearchParams","search","setSearch","location","useLocation","name","get","useEffect","fetch","then","response","ok","Error","status","json","results","catch","console","log","action","onSubmit","even","preventDefault","target","value","query","type","autoComplete","map","original_title","id","to","state","pathname","Suspense","fallback"],"sourceRoot":""}