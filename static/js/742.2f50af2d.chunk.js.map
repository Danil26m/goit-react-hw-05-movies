{"version":3,"file":"static/js/742.2f50af2d.chunk.js","mappings":"mOAIe,SAASA,IACtB,IAAQC,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,IACZI,EAAAA,EAAAA,YAAU,WACRC,MAAM,sCAAD,OACmCV,EADnC,6DAGFW,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IACAL,MAAK,SAAAM,GAAC,OAAIb,EAAYa,EAAhB,IACNC,MAAMX,QAAQC,IAClB,GAAE,CAACR,IACJ,IACEmB,EAMEhB,EANFgB,eACAC,EAKEjB,EALFiB,YACAC,EAIElB,EAJFkB,OACAC,EAGEnB,EAHFmB,SACAC,EAEEpB,EAFFoB,aACAC,EACErB,EADFqB,aAEIC,EAAO,IAAIC,KAAKF,GAAcG,cACpC,OACEN,IACE,iCACE,SAAC,KAAD,CAAMO,GAAIvB,EAASwB,MAAnB,UACE,mBACEC,MAAO,CACLC,MAAO,OACPC,QAAS,QACTC,UAAW,OACXC,OAAQ,WALZ,2BASF,iBAAKJ,MAAO,CAAEE,QAAS,OAAQG,IAAK,QAApC,WACE,gBACEC,IAAG,8DAAyDhB,GAC5DiB,IAAKlB,KAEP,4BACE,0BACGA,EADH,KACqBM,EADrB,QAGA,wCAAgBF,MAChB,sCACA,uBAAID,KACJ,oCACA,eAAIQ,MAAO,CAAEE,QAAS,OAAQG,IAAK,QAAnC,SACGd,EAAOiB,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACV,wBAAgBA,GAAPA,EADC,aAMlB,iBACET,MAAO,CACLE,QAAS,OACTQ,cAAe,SACfL,IAAK,OACLM,OAAQ,UALZ,WAQE,SAAC,KAAD,CAAMb,GAAE,OAAUC,MAAOxB,EAASwB,MAAlC,mBACA,SAAC,KAAD,CAAMD,GAAE,UAAaC,MAAOxB,EAASwB,MAArC,yBAEF,SAAC,EAAAa,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAKT,C","sources":["pages/InfoPopularMovie.jsx"],"sourcesContent":["import { Suspense, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useLocation, Outlet } from 'react-router-dom';\n\nexport default function InfoPopularMovie() {\n  const { id } = useParams();\n  const [infoFilm, setInfoFilm] = useState([]);\n  const location = useLocation();\n  console.log(location);\n  useEffect(() => {\n    fetch(\n      `https://api.themoviedb.org/3/movie/${id}?api_key=74e6158a65e53d6dc937ccdd03fe4703&language=en-US`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then(r => setInfoFilm(r))\n      .catch(console.log);\n  }, [id]);\n  const {\n    original_title,\n    poster_path,\n    genres,\n    overview,\n    vote_average,\n    release_date,\n  } = infoFilm;\n  const date = new Date(release_date).getFullYear();\n  return (\n    genres && (\n      <>\n        <Link to={location.state}>\n          <button\n            style={{\n              width: '90px',\n              display: 'block',\n              marginTop: '10px',\n              cursor: 'pointer',\n            }}>Go to Back</button>\n        </Link>\n\n        <div style={{ display: 'flex', gap: '20px' }}>\n          <img\n            src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${poster_path}`}\n            alt={original_title}\n          />\n          <div>\n            <h2>\n              {original_title} ({date})\n            </h2>\n            <p>User Score: {vote_average}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ul style={{ display: 'flex', gap: '10px' }}>\n              {genres.map(({ name }) => (\n                <li key={name}>{name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            flexDirection: 'column',\n            gap: '10px',\n            margin: '10px 0',\n          }}\n        >\n          <Link to={`cast`} state={location.state}>cast</Link>\n          <Link to={`reviews`} state={location.state}>reviews</Link>\n        </div>\n        <Suspense fallback={null}>\n          <Outlet />\n        </Suspense>\n      </>\n    )\n  );\n}\n"],"names":["InfoPopularMovie","id","useParams","useState","infoFilm","setInfoFilm","location","useLocation","console","log","useEffect","fetch","then","response","ok","Error","status","json","r","catch","original_title","poster_path","genres","overview","vote_average","release_date","date","Date","getFullYear","to","state","style","width","display","marginTop","cursor","gap","src","alt","map","name","flexDirection","margin","Suspense","fallback"],"sourceRoot":""}