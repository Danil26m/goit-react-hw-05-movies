{"version":3,"file":"static/js/134.2afac0c8.chunk.js","mappings":"mOAGe,SAASA,IAAU,IAAD,EAC/B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BC,EAAAA,EAAAA,MAA5B,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAI,UAAGJ,EAAOK,IAAI,gBAAd,QAA0B,GAyBpC,OAnBAC,EAAAA,EAAAA,YAAU,WACHF,GAGLG,MAAM,2GAAD,OACwGH,EADxG,gCAGFI,MAAK,SAAAC,GACJ,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAMF,EAASG,QAE3B,OAAOH,EAASI,MACjB,IACAL,MAAK,YAAkB,IAAfM,EAAc,EAAdA,QACPhB,EAASgB,EACV,IACAC,MAAMC,QAAQC,IAClB,GAAE,CAACjB,EAAQI,KAGV,iCACE,kBAAMc,OAAO,GAAGC,SA1BC,SAAAC,GACnBA,EAAKC,iBACLpB,EAAUmB,EAAKE,OAAO,GAAGC,MAAQ,CAAEC,MAAOJ,EAAKE,OAAO,GAAGC,OAAU,CAAC,GACpEH,EAAKE,OAAO,GAAGC,MAAQ,EACxB,EAsBG,WACE,kBAAOE,KAAK,OAAOC,aAAa,SAChC,mBAAQD,KAAK,SAAb,wBAEF,wBACG5B,EAAM8B,OACH9B,EAAM+B,KAAI,gBAAGC,EAAH,EAAGA,eAAgBC,EAAnB,EAAmBA,GAAnB,OACR,SAAC,KAAD,CACEC,GAAE,kBAAaD,GACfE,MAAK,UAAK9B,EAAS+B,UAAd,OAAyB/B,EAASF,QAFzC,UAKE,wBAAK6B,KAFAC,EAJC,IASV,OAIX,C","sources":["pages/Movies.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [films, setFilms] = useState([]);\n  const [search, setSearch] = useSearchParams();\n  const location = useLocation();\n  const name = search.get('query') ?? '';\n  const handelSubmit = even => {\n    even.preventDefault();\n    setSearch(even.target[0].value ? { query: even.target[0].value } : {});\n    even.target[0].value = '';\n  };\n  useEffect(() => {\n    if (!name) {\n      return;\n    }\n    fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=74e6158a65e53d6dc937ccdd03fe4703&language=en-US&query=${name}&page=1&include_adult=false`\n    )\n      .then(response => {\n        if (!response.ok) {\n          throw new Error(response.status);\n        }\n        return response.json();\n      })\n      .then(({ results }) => {\n        setFilms(results);\n      })\n      .catch(console.log);\n  }, [search, name]);\n\n  return (\n    <>\n      <form action=\"\" onSubmit={handelSubmit}>\n        <input type=\"text\" autoComplete=\"off\" />\n        <button type=\"submit\">Searsh</button>\n      </form>\n      <ul>\n        {films.length\n          ? films.map(({ original_title, id }) => (\n              <Link\n                to={`/movies/${id}`}\n                state={`${location.pathname}${location.search}`}\n                key={id}\n              >\n                <li>{original_title}</li>\n              </Link>\n            ))\n          : ''}\n      </ul>\n    </>\n  );\n}\n"],"names":["Movies","useState","films","setFilms","useSearchParams","search","setSearch","location","useLocation","name","get","useEffect","fetch","then","response","ok","Error","status","json","results","catch","console","log","action","onSubmit","even","preventDefault","target","value","query","type","autoComplete","length","map","original_title","id","to","state","pathname"],"sourceRoot":""}